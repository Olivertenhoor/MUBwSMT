(set-logic QF_NRA)
(set-option :precision 0.0000001)
(define-fun pi () Real 3.141592653589793)
(declare-fun f_0_1_1 () Real)
(assert (and (>= f_0_1_1 0.0) (< f_0_1_1 2.0)))
(declare-fun f_0_1_2 () Real)
(assert (and (>= f_0_1_2 0.0) (< f_0_1_2 2.0)))
(declare-fun f_0_2_1 () Real)
(assert (and (>= f_0_2_1 0.0) (< f_0_2_1 2.0)))
(declare-fun f_0_2_2 () Real)
(assert (and (>= f_0_2_2 0.0) (< f_0_2_2 2.0)))
(declare-fun f_0_3_1 () Real)
(assert (and (>= f_0_3_1 0.0) (< f_0_3_1 2.0)))
(declare-fun f_0_3_2 () Real)
(assert (and (>= f_0_3_2 0.0) (< f_0_3_2 2.0)))
(declare-fun f_1_1_1 () Real)
(assert (and (>= f_1_1_1 0.0) (< f_1_1_1 2.0)))
(declare-fun f_1_1_2 () Real)
(assert (and (>= f_1_1_2 0.0) (< f_1_1_2 2.0)))
(declare-fun f_1_2_1 () Real)
(assert (and (>= f_1_2_1 0.0) (< f_1_2_1 2.0)))
(declare-fun f_1_2_2 () Real)
(assert (and (>= f_1_2_2 0.0) (< f_1_2_2 2.0)))
(declare-fun f_1_3_1 () Real)
(assert (and (>= f_1_3_1 0.0) (< f_1_3_1 2.0)))
(declare-fun f_1_3_2 () Real)
(assert (and (>= f_1_3_2 0.0) (< f_1_3_2 2.0)))
(assert (= (+ (^ (cos (* pi (- f_0_2_1 f_0_1_1))) 2) (^ (cos (* pi (- f_0_2_2 f_0_1_2))) 2) (^ (sin (* pi (- f_0_2_1 f_0_1_1))) 2) (^ (sin (* pi (- f_0_2_2 f_0_1_2))) 2)) 2.0))
(assert (= (+ (^ (cos (* pi (- f_1_2_1 f_0_1_1))) 2) (^ (cos (* pi (- f_1_2_2 f_0_1_2))) 2) (^ (sin (* pi (- f_1_2_1 f_0_1_1))) 2) (^ (sin (* pi (- f_1_2_2 f_0_1_2))) 2)) 2.0))
(assert (= (+ (^ (cos (* pi (- f_0_2_1 f_1_1_1))) 2) (^ (cos (* pi (- f_0_2_2 f_1_1_2))) 2) (^ (sin (* pi (- f_0_2_1 f_1_1_1))) 2) (^ (sin (* pi (- f_0_2_2 f_1_1_2))) 2)) 2.0))
(assert (= (+ (^ (cos (* pi (- f_1_2_1 f_1_1_1))) 2) (^ (cos (* pi (- f_1_2_2 f_1_1_2))) 2) (^ (sin (* pi (- f_1_2_1 f_1_1_1))) 2) (^ (sin (* pi (- f_1_2_2 f_1_1_2))) 2)) 2.0))
(assert (= (+ (^ (cos (* pi (- f_0_3_1 f_0_1_1))) 2) (^ (cos (* pi (- f_0_3_2 f_0_1_2))) 2) (^ (sin (* pi (- f_0_3_1 f_0_1_1))) 2) (^ (sin (* pi (- f_0_3_2 f_0_1_2))) 2)) 2.0))
(assert (= (+ (^ (cos (* pi (- f_1_3_1 f_0_1_1))) 2) (^ (cos (* pi (- f_1_3_2 f_0_1_2))) 2) (^ (sin (* pi (- f_1_3_1 f_0_1_1))) 2) (^ (sin (* pi (- f_1_3_2 f_0_1_2))) 2)) 2.0))
(assert (= (+ (^ (cos (* pi (- f_0_3_1 f_1_1_1))) 2) (^ (cos (* pi (- f_0_3_2 f_1_1_2))) 2) (^ (sin (* pi (- f_0_3_1 f_1_1_1))) 2) (^ (sin (* pi (- f_0_3_2 f_1_1_2))) 2)) 2.0))
(assert (= (+ (^ (cos (* pi (- f_1_3_1 f_1_1_1))) 2) (^ (cos (* pi (- f_1_3_2 f_1_1_2))) 2) (^ (sin (* pi (- f_1_3_1 f_1_1_1))) 2) (^ (sin (* pi (- f_1_3_2 f_1_1_2))) 2)) 2.0))
(assert (= (+ (^ (cos (* pi (- f_0_1_1 f_0_2_1))) 2) (^ (cos (* pi (- f_0_1_2 f_0_2_2))) 2) (^ (sin (* pi (- f_0_1_1 f_0_2_1))) 2) (^ (sin (* pi (- f_0_1_2 f_0_2_2))) 2)) 2.0))
(assert (= (+ (^ (cos (* pi (- f_1_1_1 f_0_2_1))) 2) (^ (cos (* pi (- f_1_1_2 f_0_2_2))) 2) (^ (sin (* pi (- f_1_1_1 f_0_2_1))) 2) (^ (sin (* pi (- f_1_1_2 f_0_2_2))) 2)) 2.0))
(assert (= (+ (^ (cos (* pi (- f_0_1_1 f_1_2_1))) 2) (^ (cos (* pi (- f_0_1_2 f_1_2_2))) 2) (^ (sin (* pi (- f_0_1_1 f_1_2_1))) 2) (^ (sin (* pi (- f_0_1_2 f_1_2_2))) 2)) 2.0))
(assert (= (+ (^ (cos (* pi (- f_1_1_1 f_1_2_1))) 2) (^ (cos (* pi (- f_1_1_2 f_1_2_2))) 2) (^ (sin (* pi (- f_1_1_1 f_1_2_1))) 2) (^ (sin (* pi (- f_1_1_2 f_1_2_2))) 2)) 2.0))
(assert (= (+ (^ (cos (* pi (- f_0_3_1 f_0_2_1))) 2) (^ (cos (* pi (- f_0_3_2 f_0_2_2))) 2) (^ (sin (* pi (- f_0_3_1 f_0_2_1))) 2) (^ (sin (* pi (- f_0_3_2 f_0_2_2))) 2)) 2.0))
(assert (= (+ (^ (cos (* pi (- f_1_3_1 f_0_2_1))) 2) (^ (cos (* pi (- f_1_3_2 f_0_2_2))) 2) (^ (sin (* pi (- f_1_3_1 f_0_2_1))) 2) (^ (sin (* pi (- f_1_3_2 f_0_2_2))) 2)) 2.0))
(assert (= (+ (^ (cos (* pi (- f_0_3_1 f_1_2_1))) 2) (^ (cos (* pi (- f_0_3_2 f_1_2_2))) 2) (^ (sin (* pi (- f_0_3_1 f_1_2_1))) 2) (^ (sin (* pi (- f_0_3_2 f_1_2_2))) 2)) 2.0))
(assert (= (+ (^ (cos (* pi (- f_1_3_1 f_1_2_1))) 2) (^ (cos (* pi (- f_1_3_2 f_1_2_2))) 2) (^ (sin (* pi (- f_1_3_1 f_1_2_1))) 2) (^ (sin (* pi (- f_1_3_2 f_1_2_2))) 2)) 2.0))
(assert (= (+ (^ (cos (* pi (- f_0_1_1 f_0_3_1))) 2) (^ (cos (* pi (- f_0_1_2 f_0_3_2))) 2) (^ (sin (* pi (- f_0_1_1 f_0_3_1))) 2) (^ (sin (* pi (- f_0_1_2 f_0_3_2))) 2)) 2.0))
(assert (= (+ (^ (cos (* pi (- f_1_1_1 f_0_3_1))) 2) (^ (cos (* pi (- f_1_1_2 f_0_3_2))) 2) (^ (sin (* pi (- f_1_1_1 f_0_3_1))) 2) (^ (sin (* pi (- f_1_1_2 f_0_3_2))) 2)) 2.0))
(assert (= (+ (^ (cos (* pi (- f_0_1_1 f_1_3_1))) 2) (^ (cos (* pi (- f_0_1_2 f_1_3_2))) 2) (^ (sin (* pi (- f_0_1_1 f_1_3_1))) 2) (^ (sin (* pi (- f_0_1_2 f_1_3_2))) 2)) 2.0))
(assert (= (+ (^ (cos (* pi (- f_1_1_1 f_1_3_1))) 2) (^ (cos (* pi (- f_1_1_2 f_1_3_2))) 2) (^ (sin (* pi (- f_1_1_1 f_1_3_1))) 2) (^ (sin (* pi (- f_1_1_2 f_1_3_2))) 2)) 2.0))
(assert (= (+ (^ (cos (* pi (- f_0_2_1 f_0_3_1))) 2) (^ (cos (* pi (- f_0_2_2 f_0_3_2))) 2) (^ (sin (* pi (- f_0_2_1 f_0_3_1))) 2) (^ (sin (* pi (- f_0_2_2 f_0_3_2))) 2)) 2.0))
(assert (= (+ (^ (cos (* pi (- f_1_2_1 f_0_3_1))) 2) (^ (cos (* pi (- f_1_2_2 f_0_3_2))) 2) (^ (sin (* pi (- f_1_2_1 f_0_3_1))) 2) (^ (sin (* pi (- f_1_2_2 f_0_3_2))) 2)) 2.0))
(assert (= (+ (^ (cos (* pi (- f_0_2_1 f_1_3_1))) 2) (^ (cos (* pi (- f_0_2_2 f_1_3_2))) 2) (^ (sin (* pi (- f_0_2_1 f_1_3_1))) 2) (^ (sin (* pi (- f_0_2_2 f_1_3_2))) 2)) 2.0))
(assert (= (+ (^ (cos (* pi (- f_1_2_1 f_1_3_1))) 2) (^ (cos (* pi (- f_1_2_2 f_1_3_2))) 2) (^ (sin (* pi (- f_1_2_1 f_1_3_1))) 2) (^ (sin (* pi (- f_1_2_2 f_1_3_2))) 2)) 2.0))
(assert (= (+ (cos (* pi (- f_1_1_1 f_0_1_1))) (cos (* pi (- f_1_1_2 f_0_1_2)))) 0.0))
(assert (= (+ (sin (* pi (- f_1_1_1 f_0_1_1))) (sin (* pi (- f_1_1_2 f_0_1_2)))) 0.0))
(assert (= (+ (cos (* pi (- f_0_1_1 f_1_1_1))) (cos (* pi (- f_0_1_2 f_1_1_2)))) 0.0))
(assert (= (+ (sin (* pi (- f_0_1_1 f_1_1_1))) (sin (* pi (- f_0_1_2 f_1_1_2)))) 0.0))
(assert (= (+ (cos (* pi (- f_1_2_1 f_0_2_1))) (cos (* pi (- f_1_2_2 f_0_2_2)))) 0.0))
(assert (= (+ (sin (* pi (- f_1_2_1 f_0_2_1))) (sin (* pi (- f_1_2_2 f_0_2_2)))) 0.0))
(assert (= (+ (cos (* pi (- f_0_2_1 f_1_2_1))) (cos (* pi (- f_0_2_2 f_1_2_2)))) 0.0))
(assert (= (+ (sin (* pi (- f_0_2_1 f_1_2_1))) (sin (* pi (- f_0_2_2 f_1_2_2)))) 0.0))
(assert (= (+ (cos (* pi (- f_1_3_1 f_0_3_1))) (cos (* pi (- f_1_3_2 f_0_3_2)))) 0.0))
(assert (= (+ (sin (* pi (- f_1_3_1 f_0_3_1))) (sin (* pi (- f_1_3_2 f_0_3_2)))) 0.0))
(assert (= (+ (cos (* pi (- f_0_3_1 f_1_3_1))) (cos (* pi (- f_0_3_2 f_1_3_2)))) 0.0))
(assert (= (+ (sin (* pi (- f_0_3_1 f_1_3_1))) (sin (* pi (- f_0_3_2 f_1_3_2)))) 0.0))
(check-sat)
(exit)